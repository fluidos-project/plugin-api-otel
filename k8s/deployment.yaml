apiVersion: apps/v1
kind: Deployment
metadata:
  name: agent-api
  namespace: monitoring
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: agent-api
  template:
    metadata:
      labels:
        app.kubernetes.io/name: agent-api
    spec:
      serviceAccountName: opentelemetrycollector
      containers:
        - name: agent-api
          image: ants-registry.inf.um.es/telemetry/plugin-api-otel:latest
          imagePullPolicy: Always
          env:
            - name: PYTHONUNBUFFERED
              value: "1"
          ports:
            - containerPort: 8000

        - name: config-reloader
          image: bitnami/kubectl:latest
          securityContext:
            runAsUser: 0
          command: ["/bin/bash", "-c"]
          args:
            - |
              echo "Fixing apt environment..."
              mkdir -p /var/lib/apt/lists/partial && \
              apt-get update && \
              apt-get install -y curl && \
              rm -rf /var/lib/apt/lists/*

              while true; do
                sleep 10;
                CURRENT_VERSION="$(kubectl get configmap collector-config -n monitoring -o jsonpath='{.metadata.resourceVersion}')"
                PREVIOUS_VERSION="$(cat /tmp/collector-config-version 2>/dev/null)"

                echo "Current Version: $CURRENT_VERSION, Previous Version: $PREVIOUS_VERSION"

                if [ -z "$PREVIOUS_VERSION" ]; then
                  echo "Storing initial version without sending SIGHUP."
                  echo "$CURRENT_VERSION" > /tmp/collector-config-version
                elif [ "$CURRENT_VERSION" != "$PREVIOUS_VERSION" ]; then
                  echo "Detected change in ConfigMap..."
                  echo "Updating collector config..."
                  echo "$CURRENT_VERSION" > /tmp/collector-config-version

                  echo "Notifying agent API to send SIGHUP..."
                  curl -X POST http://localhost:8000/reload
                fi
              done
          volumeMounts:
            - mountPath: /tmp
              name: version-storage

      volumes:
        - name: version-storage
          emptyDir: {}
